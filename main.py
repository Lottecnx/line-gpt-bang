from fastapi import FastAPI, Request
from pydantic import BaseModel
from linebot import LineBotApi, WebhookHandler
from linebot.models import MessageEvent, TextMessage, TextSendMessage
import openai
import os
from datetime import datetime

# Initialize
app = FastAPI()
line_bot_api = LineBotApi(os.getenv("LINE_CHANNEL_ACCESS_TOKEN"))
handler = WebhookHandler(os.getenv("LINE_CHANNEL_SECRET"))
openai.api_key = os.getenv("OPENAI_API_KEY")

# === PROMPT SETTINGS ===
SYSTEM_PROMPT = (
    "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ '‡∏ö‡∏±‡∏á' ‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢‡πÉ‡∏à‡∏î‡∏µ ‡∏â‡∏•‡∏≤‡∏î ‡∏û‡∏π‡∏î‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô Lisa ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢ ‡πÅ‡∏ï‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÉ‡∏à‡∏Ñ‡∏ô‡πÄ‡∏Å‡πà‡∏á‡∏°‡∏≤‡∏Å "
    "‡∏ö‡∏±‡∏á‡∏à‡∏∞‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏∏‡∏†‡∏≤‡∏û ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏±‡∏ô‡πÄ‡∏≠‡∏á ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤ ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏á‡∏Å‡∏≤‡∏¢ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏•‡∏¥‡∏á‡∏Å‡πå Affiliate ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢"
)

# === USER QUOTA TRACKING ===
user_quota = {}  # user_id: {"date": "YYYY-MM-DD", "count": int}
MAX_MESSAGES_PER_DAY = 5

# === AFFILIATE LINKS BY CATEGORY ===
affiliate_links = {
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡∏¥‡πâ‡∏ï": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏¢‡∏∑‡∏î": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡πÅ‡∏Ç‡∏ô‡∏¢‡∏≤‡∏ß": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡∏Å‡∏≤‡∏á‡πÄ‡∏Å‡∏á": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡∏ú‡∏π‡πâ‡∏ä‡∏≤‡∏¢": "https://s.shopee.co.th/8zrT7bBLKl",
    "‡πÅ‡∏ü‡∏ä‡∏±‡πà‡∏ô‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á": "https://s.shopee.co.th/AUgGuu4tJk",
    "‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á": "https://s.shopee.co.th/AUgGuu4tJk",
    "‡∏Å‡∏£‡∏∞‡πÇ‡∏õ‡∏£‡∏á": "https://s.shopee.co.th/AUgGuu4tJk",
    "‡πÄ‡∏î‡∏£‡∏™": "https://s.shopee.co.th/AUgGuu4tJk",
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏™‡∏≤‡∏¢‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß": "https://s.shopee.co.th/AUgGuu4tJk",
    "‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á": "https://s.shopee.co.th/AUgGuu4tJk"
}

def detect_category(text):
    for keyword in affiliate_links:
        if keyword in text:
            return keyword
    return None

def check_quota(user_id):
    today = datetime.now().strftime("%Y-%m-%d")
    if user_id not in user_quota or user_quota[user_id]["date"] != today:
        user_quota[user_id] = {"date": today, "count": 0}

    if user_quota[user_id]["count"] < MAX_MESSAGES_PER_DAY:
        user_quota[user_id]["count"] += 1
        return True
    return False

# === LINE WEBHOOK ===
@app.post("/webhook")
async def callback(request: Request):
    signature = request.headers['X-Line-Signature']
    body = await request.body()
    handler.handle(body.decode('utf-8'), signature)
    return "OK"

# === HANDLE MESSAGES ===
@handler.add(MessageEvent, message=TextMessage)
def handle_message(event):
    user_id = event.source.user_id
    user_text = event.message.text

    if not check_quota(user_id):
        reply = "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ‡∏Ñ‡∏£‡∏ö 5 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö ‡∏û‡∏ö‡∏Å‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡∏∏‡πà‡∏á‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö üòä"
        line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply))
        return

    try:
        response = openai.ChatCompletion.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": SYSTEM_PROMPT},
                {"role": "user", "content": user_text},
            ]
        )
        reply_text = response.choices[0].message.content.strip()

        # ‡πÅ‡∏ô‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå Affiliate ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏´‡∏°‡∏ß‡∏î‡∏ï‡∏£‡∏á
        category = detect_category(user_text)
        if category:
            reply_text += f"\n\nüõç ‡∏ö‡∏±‡∏á‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {category}: {affiliate_links[category]}"

    except Exception as e:
        reply_text = f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å GPT: {str(e)}"

    line_bot_api.reply_message(event.reply_token, TextSendMessage(text=reply_text))

# === RUN FOR RENDER ===
if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=10000)
